{
    "version": "https://jsonfeed.org/version/1",
    "title": "Nineko's Blog • All posts by \"computer vision\" tag",
    "description": "",
    "home_page_url": "https://nineko.github.io",
    "items": [
        {
            "id": "https://nineko.github.io/2020/07/30/MyPaper/",
            "url": "https://nineko.github.io/2020/07/30/MyPaper/",
            "title": "Training Deep Networks with Synthetic Data for Textureless Object Pose Estimation",
            "date_published": "2020-07-30T08:22:33.000Z",
            "content_html": "<p>碩士研究成果，不過目前因其他因素，無法公開全文，也不適合作太詳細的說明，還請見諒<br>\n最晚公開時間 2025.01</p>\n<h1>論文連結</h1>  \n<p><a href=\"https://drive.google.com/open?id=14RATn-h3gV4wIrBbZ2rxjERyxK64EEQM\">https://drive.google.com/open?id=14RATn-h3gV4wIrBbZ2rxjERyxK64EEQM</a><br>\n<a href=\"https://github.com/Nineko/Deep-Learning_Training-Deep-Networks-with-Synthetic-Data-for-Textureless\">Github Link</a></p>\n<h1>簡述</h1>\n<h2>問題定義</h2>\n<p>在這個研究中想要解決在工業應用上因傳統視覺伺服的不足而導入深度學習時，所發生的種種問題。<br>\n我們假設視覺系統為一個手眼系統 (左圖)，所以能夠以物體為圓心定義出一個球座標系 (右圖)</p>\n<p><img src=\"eyeonhand.png\" alt=\"image\"></p>\n<p>根據此座標系，在我們的研究中主要考慮三個變量 : In-plane Rotation 、 Theta 、 Phi</p>\n<p><img src=\"ThreePara.gif\" alt=\"image\"></p>\n<h2>CAD Simulator</h2>\n<p>同時為了解決訓練資料取得及標定不易的問題，我們撰寫了使用 OpenGL 並在 QT 上進行開發的 CAD 模型模擬器，詳細可以前往我的 CAD-Simulator 專案 (<a href=\"https://github.com/Nineko/CAD-Simulator\">https://github.com/Nineko/CAD-Simulator</a>)</p>\n<p><img src=\"CAD%E6%A8%A1%E5%9E%8B%E7%95%8C%E9%9D%A2.png\" alt=\"image\"></p>\n<h2>測試結果</h2>\n<p>在本研究中，我們利用前述的模擬器產生訓練資料進行訓練，並以相同的方式產生測試集對三種物體進行測試，每種物體都產生了約 16000 張圖片進行測試</p>\n<p><img src=\"class.jpg\" alt=\"image\"></p>\n<p>測試時分成兩個部分，首先為分辨物體及物體定位的結果 :</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">Class</th>\n<th style=\"text-align:center\">Mean IoU</th>\n<th style=\"text-align:center\">Mean Classification Accuracy</th>\n<th style=\"text-align:center\">Center X-Shift Error (By pixel)</th>\n<th style=\"text-align:center\">Center Y-Shift Error (By pixel)</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">Class 1</td>\n<td style=\"text-align:center\">0.8824</td>\n<td style=\"text-align:center\">0.8284</td>\n<td style=\"text-align:center\">2.3140</td>\n<td style=\"text-align:center\">2.2287</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">Class 2</td>\n<td style=\"text-align:center\">0.8592</td>\n<td style=\"text-align:center\">0.8496</td>\n<td style=\"text-align:center\">1.6883</td>\n<td style=\"text-align:center\">1.6435</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">Class 3</td>\n<td style=\"text-align:center\">0.9362</td>\n<td style=\"text-align:center\">0.8499</td>\n<td style=\"text-align:center\">1.9301</td>\n<td style=\"text-align:center\">1.6057</td>\n</tr>\n</tbody>\n</table>\n<p>再來是三個變量的估測結果 :</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">Class</th>\n<th style=\"text-align:center\">Mean In-plane rotation error(°)</th>\n<th style=\"text-align:center\">Mean Theta error(°)</th>\n<th style=\"text-align:center\">Mean Phi error(°)</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">Class 1</td>\n<td style=\"text-align:center\">2.7461</td>\n<td style=\"text-align:center\">1.3171</td>\n<td style=\"text-align:center\">6.2603</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">Class 2</td>\n<td style=\"text-align:center\">3.5969</td>\n<td style=\"text-align:center\">0.8520</td>\n<td style=\"text-align:center\">6.2455</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">Class 3</td>\n<td style=\"text-align:center\">4.6340</td>\n<td style=\"text-align:center\">1.0070</td>\n<td style=\"text-align:center\">6.0381</td>\n</tr>\n</tbody>\n</table>\n",
            "tags": [
                "DNN",
                "Computer Vision",
                "Pose Estimation"
            ]
        }
    ]
}