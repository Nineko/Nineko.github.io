<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://nineko.github.io</id>
    <title>Nineko&#39;s Blog • Posts by &#34;python&#34; tag</title>
    <link href="https://nineko.github.io" />
    <updated>2020-09-04T06:06:56.000Z</updated>
    <category term="DNN" />
    <category term="QT" />
    <category term="Computer Vision" />
    <category term="Pose Estimation" />
    <category term="Python" />
    <entry>
        <id>https://nineko.github.io/2020/09/04/Python-crawler/</id>
        <title>[筆記]Python應用-爬蟲</title>
        <link rel="alternate" href="https://nineko.github.io/2020/09/04/Python-crawler/"/>
        <content type="html">&lt;h1&gt;何謂爬蟲&lt;/h1&gt;
&lt;hr&gt;
&lt;p&gt;  爬蟲以白話來說的話就是一個從網頁上抓資料下來的動作，舉一個例子來說 : NVIDIA 最近出了新型號的顯示卡，那麼舊型號勢必會跌價，你今天想研究它跌價的趨勢，並試圖預估最低點撿個便宜，所以你每天都上露天去記錄金額的變化，但是每天上去記錄實在是太麻煩了，不僅容易忘記，記錄還得花上一段時間，面對這種情形，使用爬蟲便會是一個很好的解決方案，爬蟲的用意就是為了解決這種重複性高，大量且單調的工作，有了爬蟲工具，資料科學家便能更方便的蒐集資料，能夠專心的投入在分析上。&lt;/p&gt;
&lt;h1&gt;Python上的爬蟲&lt;/h1&gt;
&lt;hr&gt;
&lt;p&gt;  那麼在 Python 上該如何撰寫一個爬蟲程式呢？這方面 Python 為我們帶來了完善的解決方案，只要有 requests 加上 BeautifulSoup 兩個套件便可以進行爬蟲程式的撰寫。&lt;/p&gt;
&lt;h2&gt;requests&lt;/h2&gt;
&lt;hr&gt;
&lt;p&gt;  requests 套件給予我們在 Python 上能夠操作網頁的基本功能，如 GET、 POST 、 PUT、 DELETE、 HEAD、 OPTIONS、 Cookie 操作等功能，在本章節中主要使用 GET 來獲取網頁中的內容，是爬蟲的第一步。&lt;/p&gt;
&lt;p&gt;安裝 requests :&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;pip install requests&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;基本 GET 方法使用 :&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; requests&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;result = requests.get(&lt;span class=&#34;string&#34;&gt;&amp;#x27;https://nineko.github.io&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print(result.text)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&#34;crawler01.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt;
&lt;p&gt;  使用 GET 能夠將網頁的程式碼整個拿下來，所有網頁的資訊都在這裡頭，所以接下的的動作就是來解析並過濾出我們所需要的資訊，而這個則需要方才所說的另一個套件，BeautifulSoup。&lt;/p&gt;
&lt;h2&gt;BeautifulSoup&lt;/h2&gt;
&lt;hr&gt;
&lt;p&gt;  BeautifulSoup 能夠為我們解析 HTML，將其轉換成能夠快速查找資訊的資料結構供後續操作，並提供相應的查找方式，迅速過濾出使用者想要的標籤，可謂是爬蟲的一大利器。&lt;/p&gt;
&lt;p&gt;安裝 requests :&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;pip install beautifulsoup4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;基本方法使用 :&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; requests&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; bs4 &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; BeautifulSoup &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;result = requests.get(&lt;span class=&#34;string&#34;&gt;&amp;#x27;https://nineko.github.io&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;soup = BeautifulSoup(result, &lt;span class=&#34;string&#34;&gt;&amp;#x27;html.parser&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print(soup.prettify())&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&#34;crawler02.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt;
&lt;p&gt;  不要看打印出來看起來只是稍微改了點縮排而已，但是內部已經建構了一個特別的資料結構，我們可以用 BeautifulSoup 提供的 select 方法來提取標籤內容。&lt;/p&gt;
&lt;p&gt;查找標籤 :&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; requests&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; bs4 &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; BeautifulSoup &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;result = requests.get(&lt;span class=&#34;string&#34;&gt;&amp;#x27;https://nineko.github.io&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;soup = BeautifulSoup(result, &lt;span class=&#34;string&#34;&gt;&amp;#x27;html.parser&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;title = soup.select(&lt;span class=&#34;string&#34;&gt;&amp;quot;h3.home-article-title&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; t &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; title:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  print(t.text)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&#34;crawler03.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt;
&lt;p&gt;  你看，只要短短的幾行程式碼便可以把我 Blog 文章的標題濾出，不過看到這的人可能會有個疑問，這個 &lt;code&gt;h3.home-article-title&lt;/code&gt;  哪來的？現在的 Chrome 或是我常用的 OperaGX 等瀏覽器都有可以觀看程式碼的方式，像是 Chrome 能夠點 &lt;code&gt;F12&lt;/code&gt;  進入或是在你想看的元件上右鍵選單中的檢查元件都可以跳到其程式碼的部分，觀看程式碼便可以得知其目前標籤，這個 &lt;code&gt;h3.home-article-title&lt;/code&gt;  便是這麼來的。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;crawler04.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt;
&lt;h1&gt;實戰範例&lt;/h1&gt;
&lt;hr&gt;
&lt;h2&gt;基本單頁&lt;/h2&gt;
&lt;hr&gt;
&lt;p&gt;  那麼基本工具都準備好了，現在來實戰看看，我們利用一開始的小例子，去露天鎖定 NVIDIA GTX1060 的顯示卡，把商品名與價錢爬下來，GO！&lt;/p&gt;
&lt;p&gt;  首先得先去露天實際搜尋看看整個頁面，檢查一下商品名的標籤。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;crawler05.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt;
&lt;p&gt;那我們就以剛剛的思路試著爬爬看&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; requests&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; bs4 &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; BeautifulSoup &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;result = requests.get(&lt;span class=&#34;string&#34;&gt;&amp;#x27;https://find.ruten.com.tw/s/?cateid=0011000500210001&amp;amp;q=GTX1060&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;soup = BeautifulSoup(result, &lt;span class=&#34;string&#34;&gt;&amp;#x27;html.parser&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;title = soup.select(&lt;span class=&#34;string&#34;&gt;&amp;quot;h5.prod_name&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; t &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; title:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  print(t)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&#34;crawler06.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt;
&lt;p&gt;  什麼！被拒絕了，不過別緊張，這是因為很多網站都有著檢查 User-Agent 的機制，若你不設定 User-Agent 就會被檔下來，所以我們可以見招拆招，它需要 User-Agent ，我們就給它一個，在這邊我們可以使用自己瀏覽器的 User-Agent ，像我的就是 &lt;code&gt;Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/85.0.4183.83 Safari/537.36&lt;/code&gt; ，或是使用 Python 的  &lt;code&gt;fake-useragent&lt;/code&gt;  套件產生，再者也可以使用現有的一些 User-Agent，像是 Google 就有 GoogleBot 可以使用，我們接下來就使用 GoogleBot 來進行，所以對程式碼進行一些修改後。&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# New&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;headers = &amp;#123;&lt;span class=&#34;string&#34;&gt;&amp;#x27;User-Agent&amp;#x27;&lt;/span&gt;:&lt;span class=&#34;string&#34;&gt;&amp;#x27;GoogleBot&amp;#x27;&lt;/span&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# Add headers&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;result = requests.get(&lt;span class=&#34;string&#34;&gt;&amp;#x27;https://find.ruten.com.tw/s/?cateid=0011000500210001&amp;amp;q=GTX1060&amp;#x27;&lt;/span&gt;,headers=headers)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&#34;crawler07.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt;
&lt;p&gt;  很好！順利爬到了，不過我們可以看到每個商品的  &lt;code&gt;&amp;lt;h5&amp;gt;&lt;/code&gt;  中都還包了兩個  &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt;  以及一個  &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt;  標籤，我們需要的商品名是在  &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt;  標籤中，所以我們將 select 的條件再往下一層。&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;title = soup.select(&lt;span class=&#34;string&#34;&gt;&amp;quot;h5.prod_name a&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&#34;crawler08.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt;
&lt;p&gt;  這樣一來我們就可以只獲取  &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt;  標籤中的內容，成功的爬到商品名稱，同理，價格的部分也可以以這樣的方式爬到，完整的程式碼如下，其中  &lt;code&gt;price_list = price_list[1::2]&lt;/code&gt;  的理由是因為爬下來的資料每筆會有兩個價格，因為有些商品價格會是一個範圍，所以這邊使用  &lt;code&gt;[1::2]&lt;/code&gt;  來取偶數項，也就是範圍中較大的價格值 :&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; requests&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; bs4 &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; BeautifulSoup &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; bs4 &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; BeautifulSoup &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;headers = &amp;#123;&lt;span class=&#34;string&#34;&gt;&amp;#x27;User-Agent&amp;#x27;&lt;/span&gt;:&lt;span class=&#34;string&#34;&gt;&amp;#x27;GoogleBot&amp;#x27;&lt;/span&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;result = requests.get(&lt;span class=&#34;string&#34;&gt;&amp;#x27;https://find.ruten.com.tw/s/?cateid=0011000500210001&amp;amp;q=GTX1060&amp;#x27;&lt;/span&gt;,headers=headers)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;soup = BeautifulSoup(result.text, &lt;span class=&#34;string&#34;&gt;&amp;#x27;html.parser&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;title = soup.select(&lt;span class=&#34;string&#34;&gt;&amp;#x27;h5.prod_name a&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;price = soup.select(&lt;span class=&#34;string&#34;&gt;&amp;quot;ul.price_box li.about span.price&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;title_list = []&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;price_list = []&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; t &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; title:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    title_list.append(t.text)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; p &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; price:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    price_list.append(p.text)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;price_list = price_list[&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;::&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; t,p &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; zip(title_list,price_list) :&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; print(t+&lt;span class=&#34;string&#34;&gt;&amp;quot;\t&amp;quot;&lt;/span&gt;+p)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&#34;crawler09.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt;
&lt;h2&gt;進階強化&lt;/h2&gt;
&lt;hr&gt;
&lt;p&gt;  剛剛我們成功爬下來單頁的資料，接下來要更加進階了，我們試著爬多頁資料，首先先來看看到第 2 頁網址會發生甚麼變化 :&lt;/p&gt;
&lt;figure class=&#34;highlight&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#第一頁&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;https://find.ruten.com.tw/s/?cateid=0011000500210001&amp;amp;q=GTX1060&amp;amp;sort=prc%2Fac&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#第二頁&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;https://find.ruten.com.tw/s/?cateid=0011000500210001&amp;amp;p=2&amp;amp;q=GTX1060&amp;amp;sort=prc%2Fac&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;  可以明顯的看到多了  &lt;code&gt;&amp;amp;p=2&lt;/code&gt;  這個參數，試著調整這個數值的確帶我們到了其他頁，所以我們現在知道  &lt;code&gt;&amp;amp;p=2&lt;/code&gt;  代表著第二頁，藉由改變數字可以跳轉至其他頁，那麼問題就簡單了，我們可以修改  &lt;code&gt;requests.get&lt;/code&gt;  的網址來獲取其他頁的訊息。&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; requests&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; bs4 &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; BeautifulSoup &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; bs4 &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; BeautifulSoup &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;headers = &amp;#123;&lt;span class=&#34;string&#34;&gt;&amp;#x27;User-Agent&amp;#x27;&lt;/span&gt;:&lt;span class=&#34;string&#34;&gt;&amp;#x27;GoogleBot&amp;#x27;&lt;/span&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;url = &lt;span class=&#34;string&#34;&gt;&amp;quot;https://find.ruten.com.tw/s/?cateid=0011000500210001&amp;amp;p=&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;page= &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;url2= &lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;amp;q=GTX1060&amp;amp;sort=prc%2Fac&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;title_list = []&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;price_list = []&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;while&lt;/span&gt;(&lt;span class=&#34;literal&#34;&gt;True&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    result = requests.get(url+str(page)+url2,headers=headers)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; result.status_code == requests.codes.ok :&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;     soup = BeautifulSoup(result.text, &lt;span class=&#34;string&#34;&gt;&amp;#x27;html.parser&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;     title = soup.select(&lt;span class=&#34;string&#34;&gt;&amp;#x27;h5.prod_name a&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;     price = soup.select(&lt;span class=&#34;string&#34;&gt;&amp;quot;ul.price_box li.about span.price&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;     &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; t &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; title:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      title_list.append(t.text)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;     &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; p &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; price:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      price_list.append(p.text)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;     page+=&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;     &lt;span class=&#34;keyword&#34;&gt;break&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;price_list = price_list[&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;::&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; t,p &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; zip(title_list,price_list) :&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; print(t+&lt;span class=&#34;string&#34;&gt;&amp;quot;\t&amp;quot;&lt;/span&gt;+p)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;  在這邊我們做了幾點修改，首先是  &lt;code&gt;requests.get&lt;/code&gt;  傳入 URL 的組合字串，藉由改變  &lt;code&gt;page&lt;/code&gt;  參數來獲取其他頁資料，再來為了遍歷所有頁，使用  &lt;code&gt;while&lt;/code&gt;  來持續遍歷，並藉由  &lt;code&gt;requests.get&lt;/code&gt;  的  &lt;code&gt;status_code&lt;/code&gt;  ，成功為  &lt;code&gt;200&lt;/code&gt;  做為是否繼續的判斷點，如此一來便可以將所有搜尋資料通通都爬下來了，接下來為了方便分析，我們要將其存成檔案，我們可以利用  &lt;code&gt;csv&lt;/code&gt;  套件將其存成 .csv 檔，或是使用  &lt;code&gt;pandas&lt;/code&gt;  套件處理，我們這裡採用  &lt;code&gt;pandas&lt;/code&gt;  來進行處理， &lt;code&gt;pandas&lt;/code&gt;  功能強大，雖然我們今天只要處理兩欄的小資料，但若之後需要處理較多欄位的大資料會比較方便， &lt;code&gt;pandas&lt;/code&gt;  的安裝及使用我會到 &lt;a href=&#34;https://nineko.github.io/2020/08/06/Note-Py-TrainingData/&#34;&gt;深度學習的訓練資料準備&lt;/a&gt; 的文章內再解說，這邊就直接使用。&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;df = pd.DataFrame(&amp;#123;&lt;span class=&#34;string&#34;&gt;&amp;#x27;商品名&amp;#x27;&lt;/span&gt;:title_list,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                   &lt;span class=&#34;string&#34;&gt;&amp;#x27;價格&amp;#x27;&lt;/span&gt;  :price_list&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;df.to_csv(&lt;span class=&#34;string&#34;&gt;&amp;#x27;GTX1060.csv&amp;#x27;&lt;/span&gt;, encoding=&lt;span class=&#34;string&#34;&gt;&amp;#x27;utf_8_sig&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&#34;crawler10.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt;
</content>
        <category term="Python" />
        <updated>2020-09-04T06:06:56.000Z</updated>
    </entry>
</feed>
